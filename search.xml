<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>新手向：Gclone配合AutoRclone突破Google网盘每日750G限制</title>
      <link href="/post/3aae.html"/>
      <url>/post/3aae.html</url>
      
        <content type="html"><![CDATA[<p>这个教程的操作对于我来说主要是转存其他大佬分享的资源，主要是从drive到drive，没有团队盘的，自己搜一下吧，免费的挺多的，我这里就不推荐了，而且会有翻车的风险，也建议大家不要存重要的资源。真正有需求、求稳定的请上正规车。</p><h2><span id="配置前建议先看完此文心里有个数结尾有一些坑可以先看一下提前避开">配置前，建议先看完此文，心里有个数，结尾有一些坑，可以先看一下，提前避开</span></h2><p>首先，你得有个Google账号，其次我是在VPS上配置的，如果你想在本地配置，可以查看<a href="https://zhuanlan.zhihu.com/p/124305044" target="_blank" rel="noopener">这里</a>。如果你不会使用其他ssh工具，可以下载finalshell，（关于这个软件的其他问题，在此不做讨论，只是对于没有基础的人来说比较方便），如果你会使用其他ssh软件请忽略。</p><p>其实教程看起来挺麻烦，但是配置一次，明白了一些步骤，其实挺简单的，下面开始正式教程。</p><h2><span id="1-安装python3">1、安装Python3：</span></h2><p><code>apt-get install git python3 python3-pip -y</code></p><h2><span id="2-安装screen-git-以及最新的rclone">2、安装screen，  git  以及最新的rclone</span></h2><p>如果在Debian / Ubuntu中，请直接使用此命令：</p><p><code>sudo apt-get install screen git &amp;&amp; curl https://rclone.org/install.sh | sudo bash</code></p><h2><span id="3-成功安装以上所有依赖项后运行此命令">3、成功安装以上所有依赖项后，运行此命令：</span></h2><p><code>sudo git clone https://github.com/xyou365/AutoRclone &amp;&amp; cd AutoRclone &amp;&amp; sudo pip3 install -r requirements.txt</code></p><h2><span id="4-生成服务账号service-accounts">4、生成服务账号service accounts</span></h2><p>（按需求生成，一个项目会生成100个SA 可以每天拷贝75T）</p><p>先开启Drive API<br><a href="https://developers.google.com/drive/api/v3/quickstart/python" target="_blank" rel="noopener">https://developers.google.com/drive/api/v3/quickstart/python</a><br>打开此链接，点击Enable the Drive Api，然后点击CREATE</p><p><img src="https://source.thankjava.com/view/XJltFa0" alt></p><p><img src="https://source.thankjava.com/view/XJltJee" alt></p><p>这时候会出现两个条目，点击上面的Download，下载credentials.json文件。</p><h2><span id="5-将下载的credentialsjson文件上传到autorclone目录下面">5、将下载的credentials.json文件上传到AutoRclone目录下面</span></h2><p><img src="https://source.thankjava.com/view/XJltMc9" alt></p><p>如果你使用的finalshell，可以直接将文件拖到这个目录，软件会自己上传。使用其他ssh软件的，请自行搜索命令。</p><h2><span id="6-生成服务帐户">6、生成服务帐户</span></h2><p> 1）如果你之前没创建过项目, 直接运行</p><p><code>python3 gen_sa_accounts.py --quick-setup 1</code></p><p>创建1个新项目</p><p>开启相关的服务</p><p>创建100个service accounts（1个项目，每个项目100个）</p><p>将100个service accounts的授权文件下载到accounts文件夹下面</p><p>2）如果你已经有N个项目，现需要创建新的项目并在新的项目中创建service accounts，直接运行：</p><p><code>python3 gen_sa_accounts.py --quick-setup 2 --new-only</code></p><p>额外创建2个新项目，开启相关的服务</p><p>创建200个service accounts（2个项目，每个项目100个）</p><p>将200个service accounts的授权文件下载到accounts文件夹下面</p><p>3）如果你想用已有的项目来创建service accounts（不创建新的项目），直接运行：</p><p><code>python3 gen_sa_accounts.py --quick-setup -1</code></p><p><strong>注意这会覆盖掉已有的service accounts</strong><br><strong>以上命令需要在AutoRclone目录下运行</strong></p><h2><span id="7-授权">7、授权</span></h2><p><img src="https://source.thankjava.com/view/XJltObW" alt></p><p>将连接复制到浏览器打开</p><p><img src="https://source.thankjava.com/view/XJltQUu" alt></p><p><img src="https://source.thankjava.com/view/XJltRw9" alt></p><p>全部选允许，把出现的授权码复制，然后粘贴到终端中，按回车</p><p>第一次配置会遇到Service Usage API服务未开启的情况，将终端出现的链接复制到浏览器打开，点击启用（因为我这边已经配置好了，就没有再重新配置，所以没有截图）</p><p><img src="https://source.thankjava.com/view/XJltTL8" alt></p><p>启用后，回到终端页面，按回车。这时候AutoRclone文件下面的accounts文件夹下会有很多的以json结尾的文件</p><p><img src="https://source.thankjava.com/view/XJlwUIr" alt></p><h2><span id="8-将service-accounts加入google-groups">8、将service accounts加入Google Groups</span></h2><p>我们要提取accounts目录下json文件里的邮箱，这里我们利用大神们提供的方法：</p><p><code>cat ~/AutoRclone/accounts/*.json | grep "client_email" | awk '{print $2}'| tr -d ',"' | sed 'N;N;N;N;N;N;N;N;N;/^$/d;G' &gt; ~/email.txt</code></p><p>运行后，会自动提取 Service Accounts 邮箱账户，并保存到目录下的<strong>email.txt</strong>文件中，同时还很贴心地每10个邮箱账户就隔开一行，方便复制。</p><p><img src="https://source.thankjava.com/view/XJltgT-" alt></p><p>直接将这个文本拖到桌面，备用。</p><p>打开<a href="https://groups.google.com/" target="_blank" rel="noopener">https://groups.google.com/</a> 点击新建群组</p><p><img src="https://source.thankjava.com/view/XJlxl0p" alt></p><p>然后把上面  <strong>email.txt</strong>  文件打开，将里面的邮箱直接添加到群组里<em>（注意：每次只能添加10个，每24小时只能添加100个）</em></p><p><img src="https://source.thankjava.com/view/XJlyIMy" alt></p><p>添加完成后，记住这个邮箱地址</p><p><img src="https://source.thankjava.com/view/XJlyXBy" alt></p><p>打开你的Google网盘，把这个群组邮箱地址添加到管理员当中</p><p><img src="https://source.thankjava.com/view/XJlyyov" alt></p><p><img src="https://source.thankjava.com/view/XJly0+u" alt></p><p> 到这里，AutoRclone已经安装完成，可以使用AutoRclone的命令来转存文件了，具体命令查看<a href="https://github.com/xyou365/AutoRclone#step-5-start-your-task" target="_blank" rel="noopener">这里</a></p><br><br><h2><span id="9-安装gclone">9、安装gclone</span></h2><p><code>1.  bash &lt;(wget -qO- https://git.io/gclone.sh)</code><br><em><code>方便使用gclone直接改名rclone（主要原来的脚本都叫rclone）</code></em><br><code>2.  cp /usr/bin/gclone /usr/bin/rclone</code></p><h2><span id="10-配置gclone">10、配置gclone</span></h2><p><code>rclone config</code></p><p> rclone的基础使用方法可查看<a href="https://xiaofd.win/rclone.html" target="_blank" rel="noopener">这里</a></p><p><img src="https://source.thankjava.com/view/XJl0Qge" alt></p><p><img src="https://source.thankjava.com/view/XJl0gGU" alt></p><p><img src="https://source.thankjava.com/view/XJl0mbt" alt></p><h3><span id="这里按y然后选择你的team-driver-id一般就是1">这里按Y，然后选择你的Team Driver ID，一般就是1</span></h3><h3><span id="然后按q退出">然后按Q退出</span></h3><h2><span id="11-手动配置">11、手动配置</span></h2><p>由于我们刚才配置的时候，没有添加</p><p><code>1.  service_account_file =  /root/AutoRclone/accounts/###.json</code><br><code>2.  service_account_file_path =  /root/AutoRclone/accounts/</code></p><p>这里我们自己手动添加，这样更直观一些</p><p>按照如下路径，找到rclone.conf文件</p><p><img src="https://source.thankjava.com/view/XJl1oWQ" alt></p><p>如果是用的finalshell，我们直接双击，就可以打开（如果使用的其他ssh软件，直接<code>vim /root/.config/rclone/rclone.conf</code>打开即可）</p><p><img src="https://source.thankjava.com/view/XJl11Eg" alt></p><h3><span id="添加完成后保存即可自动上传到此我们就配置完成了">添加完成后，保存即可自动上传，到此我们就配置完成了</span></h3><h3><span id="一次配置可以多台机使用">一次配置，可以多台机使用</span></h3><h3><span id="把rootconfigrclonercloneconf配置文件和autorcloneaccounts这个文件夹保存好复制到其他机器上安装好gclone就可以直接使用">把/root/.config/rclone/rclone.conf配置文件和AutoRclone/accounts/这个文件夹保存好，复制到其他机器上安装好gclone就可以直接使用</span></h3><h2><span id="12-命令行根目录id">12、命令行根目录id</span></h2><p>原版rclone如果跨团队盘或者共享文件夹,需要多个配置盘符用于操作<br>gclone支持根目录id操作.共享目录和团队盘应该带<code>--drive-server-side-across-configs</code></p><p><code>gclone copy gc:{目录1的id} gc:{目录2的id}  --drive-server-side-across-configs</code></p><h3><span id="目录id可以是普通目录共享目录团队盘">目录id可以是:普通目录，共享目录，团队盘</span></h3><h3><span id="支持目录id后跟后续路径">支持{目录id}后,跟后续路径</span></h3><h3><span id="例如">例如：</span></h3><p><code>gclone copy gc:{共享目录id} gc:{团队盘id}/media/  --drive-server-side-across-configs</code></p><h3><span id="直接拷贝单文件id">直接拷贝单文件ID</span></h3><p> id操作.共享目录和团队盘应该带<code>--drive-server-side-across-configs</code></p><p><code>gclone copy gc:{共享文件的id} gc:{目录2的id}  --drive-server-side-across-configs</code></p><h3><span id="支持目录id后跟后续路径">支持{目录id}后,跟后续路径</span></h3><p><code>gclone copy gc:{共享文件的id} gc:{团队盘id}/media/  --drive-server-side-across-configs</code></p><h1><span id="例子">例子：</span></h1><h3><span id="例如我要把下面这个资源">例如，我要把下面这个资源</span></h3><p><img src="https://source.thankjava.com/view/XJl7-wX" alt></p><h3><span id="转存到我自己的云盘未命名文件夹">转存到我自己的云盘《未命名文件夹》</span></h3><p><img src="https://source.thankjava.com/view/XJl8yUl" alt></p><h3><span id="我在第十步配置rclone的时候起的名字是gd">我在第十步配置rclone的时候起的名字是：GD</span></h3><h3><span id="那么我运行的命令就是">那么我运行的命令就是：</span></h3><p><code>gclone copy GD:{1ei8aCPea1n0leWBe0LSPdhfuUoRq8K_m} GD:{1Rxg9ycMPOn0USvHsFzRMPmwCtFECUz3R} --drive-server-side-across-configs</code></p><h3><span id="如果想断开ssh还能继续拷贝的话需要运行">如果想断开ssh还能继续拷贝的话，需要运行：</span></h3><p><code>screen -S Gclone</code></p><p><code>gclone copy GD:{1ei8aCPea1n0leWBe0LSPdhfuUoRq8K_m} GD:{1Rxg9ycMPOn0USvHsFzRMPmwCtFECUz3R} --drive-server-side-across-configs</code></p><h3><span id="然后按键盘上的-ctrlad-即可">然后按键盘上的  <strong>Ctrl+A+D</strong>  即可</span></h3><h3><span id="如果想恢复运行">如果想恢复，运行：</span></h3><p><code>screen -r Gclone</code></p><h3><span id="即可">即可</span></h3><h1><span id="一些坑">一些坑：</span></h1><h3><span id="1-如果你在第7步最后autorclone目录下没有生成json文件以及在配置过程中出现了403或者404的报错很大可能是你的账号没有权限导致的注册一个新的账号重新配置即可">1、如果你在第7步最后，AutoRclone目录下没有生成json文件，以及在配置过程中出现了403或者404的报错，很大可能是你的账号没有权限导致的，注册一个新的账号重新配置即可</span></h3><h3><span id="2-在第11步一定要添加">2、在第11步，一定要添加</span></h3><p><code>service_account_file_path =  /root/AutoRclone/accounts/</code></p><h3><span id="否则达到750g上限后不能自动换号转存就会没速度而失败">否则达到750G上限后不能自动换号，转存就会没速度而失败</span></h3><h3><span id="3-其他问题遇到再说你也可以在评论区留言虽然我也不会-但是万一有大佬看到呢">3、其他问题遇到再说，你也可以在评论区留言，虽然我也不会。。。但是万一有大佬看到呢<span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f602.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/1f602.png?v8">😂</span><span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f602.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/1f602.png?v8">😂</span><span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f602.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/1f602.png?v8">😂</span></span></h3><br><br><br><h2><span id="感谢以下项目">感谢以下项目：</span></h2><p><a href="https://github.com/xyou365/AutoRclone" target="_blank" rel="noopener">https://github.com/xyou365/AutoRclone</a></p><p><a href="https://github.com/Spazzlo/folderclone" target="_blank" rel="noopener">https://github.com/Spazzlo/folderclone</a></p><p><a href="https://github.com/donwa/gclone" target="_blank" rel="noopener">https://github.com/donwa/gclone</a></p><br><br><h2><span id="本教程借鉴以下两位大神的教程如有不明白的地方可详阅原教程">本教程借鉴以下两位大神的教程，如有不明白的地方，可详阅原教程：</span></h2><p><a href="http://blog.jialezi.net/?post=153" target="_blank" rel="noopener">http://blog.jialezi.net/?post=153</a></p><p><a href="https://zhuanlan.zhihu.com/p/124305044" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/124305044</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 代码相关 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>利用Linux deploy把EFB运行在安卓机上</title>
      <link href="/post/37188.html"/>
      <url>/post/37188.html</url>
      
        <content type="html"><![CDATA[<p>这个操作原本是需要VPS来进行的，昨天晚上突发奇想，反正都是基于Linux，不如用旧手机整个Linux来运行<br>经过我不（闲）懈（的）努（蛋）力（疼）终于搞定了。</p><p>EH Forwarder Bot是一个可扩展的聊天隧道框架，允许用户一次发送和接收来自多个IM平台的消息，并最终远程管理他们的帐户<br>目前可以实现用电报收发QQ、微信、Facebook Messenger等消息，你也可以同时一起收发多个微信、多个QQ等<br>今天我们只说收发微信消息，QQ的配置也同理，但是要用到酷Q，需要配置下docker</p><p>这里先声明一下这个的优缺点：</p><h3><span id="优点">优点：</span></h3><p>Telegram这个软件有FCM推送，聊天记录永久存储，流畅，消息再多都不会卡顿，还有防撤回功能<br>还有软件里贴图表情很多，可以直接发送到微信<br>还有Telegram这个软件，懂的人自然懂  </p><h3><span id="缺点">缺点：</span></h3><p>仅支持微信网页版所支持的功能以及消息类型，即没有朋友圈、没有红包、不能发语音、不能发位置等等诸如此类<br>部分文件、图片、表情等多媒体文件会被网页版微信截断，即收不到任何数据，尤以表情为甚（这个主要是一些微信特有的表情包，斗图没问题）<br>因此造成的偶发现象，会提醒用户使用移动客户端查看</p><h2><span id="强调一下">强调一下：</span></h2><p>这个操作主要是基于网页版微信来使用的，开始前请先在电脑上测试能不能登录网页版微信，如果不能就放弃吧<br>还有，这个需要科学上网</p><p>下面正式开始我们的骚操作</p><h3><span id="前期准备">前期准备：</span></h3><p>一台安卓设备（手机、平板设备都可以，建议不用的旧手机就可以）</p><p>1.设备硬件要求：建议RAM在1G及以上，手机ROM空闲容量最少4G以上<br>设备软件要求：建议安卓版本4.0以上，系统必须是拥有ROOT系统权限的</p><p>2.Busy Box 相信酷安的老哥们应该都知道这个软件咋用吧，就不介绍了</p><p>4.Linux Deploy 安卓平台虚拟机（chroot运行linux的容器）</p><p>5.电脑一台 其实没有电脑用手机也可以，就是操作麻烦一些</p><p>6.ssh软件一个 电脑推荐finalshell（新手使用比较直观），手机推荐termux，反正能用就行</p><h3><span id="正式开始">正式开始：</span></h3><p>*第一步：</p><p>先给旧手机root（必须），然后科学上网，不然后面还要换源，没有的可以自己百度下怎么换国内源<br>最后安装Linux deploy</p><p>*第二步：</p><p>Linux deploy设置</p><p>先点左上角三个横线——设置——前三项勾选上</p><p>再点右下角三个横线，发行版选Debian，架构选armhf，源地址默认（不能科学上网的自己百度国内源填进去）<br>镜像大小建议10240（10G）建议最小不少于4个G，用户密码默认就行（愿意自己改就改改）<br>最后拉到下面SSH，勾选启用ssh，其他全部默认就好</p><p>返回主页面，点右上角三个点，点击安装（在这之前联网就不用我说了叭）等待安装完成。</p><p>*第三步：</p><p>用ssh软件连接我们装好的Linux，局域网下可以用电脑或者另一部手机来操作（在同一个WiFi下即可）<br>如果没有局域网可以在安装Linux的手机上操作（这里推荐juice ssh）</p><p>这里只说在局域网下的情况，没有局域网的情况如何连接请百度juice ssh的用法  </p><p>我们先用ssh软件连接到我们手机上安装好的Linux  </p><p>ip地址就是手机的ip地址，有的版本会在Linuxdeploy的主页面上显示，有的不会显示，直接到WiFi设置里面看，就可以了  </p><p>finalshell的用法大家自行百度一下就好</p><p>termux使用方法<br>输入命令pkg install openssh<br>键入命令：ssh [username]@[ip] 回车<br>比如：ssh <a href="mailto:android@192.168.123.123">android@192.168.123.123</a> 回车<br>输入服务器ssh登录密码<br>登录成功</p><h2><span id="前期准备工作已经完成下面进入正题">前期准备工作已经完成，下面进入正题：</span></h2><p>（没想到吧，这才开始正题）<br>（如果运行下面命令后提示权限错误，请在命令前加上sudo再次运行）</p><p><strong>1、安装依赖</strong></p><p><code>apt install libwebp-dev libmagic-dev git screen -y</code></p><p><strong>2、安装Python3.6 4</strong></p><p><code>wget https://www.moerats.com/usr/shell/Python3/Debian_Python3.6.sh &amp;&amp; sh Debian_Python3.6.sh</code></p><p><strong>3、安装ffmpeg</strong></p><p>下载ffmpeg二进制</p><p><code>wget https://www.moerats.com/usr/down/ffmpeg/ffmpeg-git-$(getconf LONG_BIT)bit-static.tar.xz</code></p><p>解压文件</p><p><code>tar xvf ffmpeg-git-*-static.tar.xz</code></p><p>移动ffmpeg可执行文件</p><p><code>mv ffmpeg-git-/ffmpeg ffmpeg-git-/ffprobe /usr/bin/</code></p><p>删除文件</p><p><code>rm -rf ffmpeg-git-*</code></p><p><strong>4、安装框架</strong></p><p><code>pip3 install ehforwarderbot</code></p><p><strong>5、安装电报模块</strong></p><p><code>pip3 install efb-telegram-master</code></p><p><em>（如果你在此步骤遇到错误信息，请到最后查看解决方法）</em></p><p><strong>6、 安装微信模块</strong></p><p><code>pip3 install efb-wechat-slave</code></p><p><strong>7、配置模块</strong></p><p>先新建配置文件夹和配置文件config.yaml</p><p><code>mkdir -p ~/.ehforwarderbot/profiles/default</code></p><p><code>nano ~/.ehforwarderbot/profiles/default/config.yaml</code></p><p><em>Default为配置文件默认的文件夹，你也可以命名为其它的，不会的就默认</em></p><p>在打开的界面填入以下内容：</p><p><code>master_channel: blueset.telegram</code><br><code>slave_channels:</code><br><code>- blueset.wechat</code></p><p>然后按Ctrl+x 接着按Y 保存退出</p><p><strong>8、配置电报模块</strong></p><p>首先打开电报软件<br>关注@BotFather<br>到对话框依次输入：<code>/start</code>——<code>/newbot</code><br>然后会要你给机器人命名(填入你想取得名字)，命名完成会给你一个Token，记好此Token<br>然后关注@get_id_bot<br>到对话框输入：<code>/start</code><br>在返回的消息中找到“your chat ID =12345678” 记好等号后面的数字  </p><p>再新建一个电报模块配置文件夹和配置文件config.yaml</p><p>使用命令：</p><p><code>mkdir ~/.ehforwarderbot/profiles/default/blueset.telegram</code></p><p><code>nano ~/.ehforwarderbot/profiles/default/blueset.telegram/config.yaml</code></p><p><em>同样的也建在default文件夹，如果你上面更改了default文件夹，那这里也要更改</em></p><p>在打开的界面填入以下内容：</p><p><code>token: "你的Token"</code><br><code>admins:</code><br><code>- 你的ID</code></p><p>然后按Ctrl+x 接着按Y 保存退出</p><p><strong>9、启动</strong></p><p>在命令行界面输入：</p><p><code>ehforwarderbot</code></p><p>如果你前面换了默认的文件夹，则使用：</p><p><code>ehforwarderbot -p 你文件夹的名字</code></p><p>使用这个命令后，命令行界面会显示二维码，用自己的微信扫码登录即可。</p><h3><span id="前面安装etm如果遇到错误信息请看此处">前面安装ETM如果遇到错误信息请看此处：</span></h3><h5><span id="如果遇到类似报错">如果遇到类似报错：</span></h5><p>Command “/usr/local/bin/python3.6 -u -c “import setuptools, tokenize;<strong>file</strong>=’/tmp/pip-build-pq5689wy/cffi/setup.py’;f=getattr(tokenize, ‘open’, open)(<strong>file</strong>);code=f.read().replace(‘\r\n’, ‘\n’);f.close();exec(compile(code,  <strong>file</strong>, ‘exec’))” install –record /tmp/pip-10d1o1nr-record/install-record.txt –single-version-externally-managed –compile” failed with error code 1 in /tmp/pip-build-pq5689wy/cffi/</p><h5><span id="则在命令行界面输入">则在命令行界面输入：</span></h5><p><code>sudo pip3 install wheel</code></p><h5><span id="如果遇到下面这样的报错">如果遇到下面这样的报错：</span></h5><p>Failed cleaning build dir for cryptography<br>Failed building wheel for cffi</p><h5><span id="则在命令行运行如下命令">则在命令行运行如下命令：</span></h5><p><code>sudo apt install libffi-dev</code><br><code>sudo -H pip install –user –upgrade –no-cache-dir efb-telegram-master</code></p><h3><span id="即可解决">即可解决</span></h3><p><strong>命令部分整理来自Rat’s Blog，附上链接：<a href="https://www.moerats.com/archives/931/" target="_blank" rel="noopener">https://www.moerats.com/archives/931/</a><br>**</strong>EFB官方地址：<a href="https://github.com/blueset/ehForwarderBot" target="_blank" rel="noopener">https://github.com/blueset/ehForwarderBot</a>**<br><br><br><br><br><br><br><strong>如果有其它报错，请各位大佬自行google或者baidu，因为我也不会<span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f602.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/1f602.png?v8">😂</span><span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f602.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/1f602.png?v8">😂</span><span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f602.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/1f602.png?v8">😂</span></strong></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 代码相关 </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
